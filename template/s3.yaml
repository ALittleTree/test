AWSTemplateFormatVersion: 2010-09-09
Description: This CF template creates S3 bucket along with bucket policy. That will have different resrictions and services depending on the Dataclassification in the bucket.
Parameters:
  DataClassification:
    Description: Select the calss of data stored in the s3 bucket. Note that some actions will be applied to the bucket according to your selection. Temporary bucket means it's created for test purpose without bucket policy. (Mandatory)
    Type: String
    AllowedValues: [ "confidential/highly-confidential" , "Non-confidential", "Temporary"]
    Default: "confidential/highly-confidential"
  FirstTransitionStorageClass:
    Description: Select storage class to which you want the object to transition. It's recommended to transition objects to STANDARD_IA storage class after 30 days.
    Type: String
    AllowedValues: [ DEEP_ARCHIVE , GLACIER , INTELLIGENT_TIERING , ONEZONE_IA , STANDARD_IA ]
    Default: STANDARD_IA
  FirstTransitionInDays:
    Description: Indicates the number of days after creation when objects are transitioned to the specified storage class. The value must be a positive integer. It's recommended to keep it 30 days.
    Type: Number
    Default: 730
  SecondTransitionStorageClass:
    Description: Select storage class to which you want the object to transition. It's recommended to transition objects to GLACIER storage class after 90 days as a second transition.
    Type: String
    AllowedValues: [ DEEP_ARCHIVE , GLACIER , INTELLIGENT_TIERING , ONEZONE_IA , STANDARD_IA ]
    Default: GLACIER
  SecondTransitionInDays:
    Description: Indicates the number of days after creation when objects are transitioned to the specified storage class. The value must be a positive integer. It's recommended to keep it 90 days as a second transition.
    Type: Number
    Default: 1825
  ThirdTransitionInDays:
    Description: Indicates the number of days after creation when objects are transitioned to the specified storage class. The value must be a positive integer. It's recommended to keep it 365 days as a third transition.
    Type: Number
    Default: 3650
  ThirdTransitionStorageClass:
    Description: Select storage class to which you want the object to transition. It's recommaneded to transtion objects to GLACIER Deep Achieve storage class after 365 days as a third transtion.
    Type: String
    AllowedValues: [ DEEP_ARCHIVE , GLACIER , INTELLIGENT_TIERING , ONEZONE_IA , STANDARD_IA ]
    Default: DEEP_ARCHIVE
  S3BucketName:
    Type: String
    Description: Specify S3 Bucket Name. Note that the specified name will be combined dynamically with the account id and region. Returned name will be like %AccountId%-%Region%-%S3BucketName%(Mandatory)
  ExpirationInDays:
    Description: Specify the lifecycle of the objects in an Amazon S3 bucket in days, after the expiration period the objects will be deleted from the bucket. It's recommended to keep it 365*5 days.
    Type: Number
    Default: 18250
  LifeCycleId:
    Description: Specify a unique identifier for the s3 objects life cycle rules. The value can't be longer than 255 characters. (Mandatory)
    Type: String
    Default: ObjectsLifeCycle
  IamRoleName:
    Type: 'String'
    Description: 'Enter the IAM Role Names - separated by a comma - that will have access to this bucket also through API. (Optional)'
    Default: ""
  AllowGreengrassService:
    Type: 'String'
    Default: 'true'
    Description: 'Allow greengrass service to access the bucket.'
    AllowedValues:
      - 'true'
      - 'false'
  AllowS3Service:
    Type: 'String'
    Default: 'true'
    Description: 'Allow s3 service to access the bucket.'
    AllowedValues:
      - 'true'
      - 'false'
  AllowLamdbaService:
    Type: 'String'
    Default: 'true'
    Description: 'Allow lamdba service to access the bucket.'
    AllowedValues:
      - 'true'
      - 'false'
  AllowEventsService:
    Type: 'String'
    Default: 'true'
    Description: 'Allow events service to access the bucket.'
    AllowedValues:
      - 'true'
      - 'false'
  AllowEC2Service:
    Type: 'String'
    Default: 'true'
    Description: 'Allow Ec2 to access the bucket.'
    AllowedValues:
      - 'true'
      - 'false'
  AllowFSxLusterService:
    Type: 'String'
    Default: 'true'
    Description: 'Allow FSx luster to access the bucket.'
    AllowedValues:
      - 'true'
      - 'false'
  DataRestrictions:
    Description: (no longer used) Please choose if you want to Enable or Disable Data Restriction on this s3 bucket. If you plan to Limit PUT and GET objects to specific IAM Roles. Note that DataRestriction is ENABLED by default if the DataClassification is set to confidential/highly-confidential.
    Type: String
    Default: Disable
    AllowedValues: ['Enable','Disable']
  DataAccessRestrictions:
    Description: (no longer used) PUT or GET object through a Presigned URL will be restricted except for the specified IAM Roles here. Please enter one or more IAM Roles ARNs seperated by comma. Example - 'arn:aws-cn:iam::xxx:role/FSCPowerUser,arn:aws-cn:iam::xxx:role/xxx'. Note that this parameter is Mandatory if the DataClassification is confidential/highly-confidential or if DataRestrictions is Enable for other DataClassification selection.
    Type: String
    Default: ""
  app:
    Description: Enter the Application Name.(Required)
    Type: String
    AllowedPattern: "[^\\s]+"
    ConstraintDescription: "application name tag min 3 and max 50 characters"
    MinLength: 3
    MaxLength: 50
  env:
    Description: select the enviroment of the resource (Required).
    Type: String
    Default: dev
    AllowedValues:
      - prod
      - stg
      - qa
      - dev
  UpdateParameter:
    Description: (optional) This parameter is a fake param please use/change it just if you want to force the update to the new SC version
    Type: String
    Default: ""

  CloudFrontOriginBucket:
    Description: is it a CloudFront Origin Bucket?
    Type: String
    Default: 'no'
    AllowedValues:
      - 'no'
      - 'yes'
  ObjectLockEnabled:
    Description: (optional) select true if you need to enable Object Lock in this bucket. note that this option can only be chosen during the bucket creation.
    Type: String
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
      
  IWVPCID:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /BH/IW/network/vpcid
    Description:  (Optional) Enter vpc ID of the first mount target if you want FileSystem to be in specific subnet
    
  IWCIDR:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /BH/IW/network/vpccidr
    Description:  (Optional) Enter vpc ID of the first mount target if you want FileSystem to be in specific subnet

  IWS3Endpoint:
    Description: The Routing Table ID of the Routing Table that this endpoint will be added to
    Type: String
    Default: ""

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: Tags (Mandatory)
        Parameters:
          - app
          - env
      -
        Label:
          default: S3 Bucket Configuration
        Parameters:
          - DataClassification
          - S3BucketName
          - IamRoleName
          - ObjectLockEnabled
          - AllowS3Service
          - AllowLamdbaService
          - AllowEventsService
          - AllowEC2Service
          - AllowFSxLusterService
          - AllowGreengrassService
          - CloudFrontOriginBucket
      -
        Label:
          default: S3 Bucket Objects lifecycle Configuration
        Parameters:
          - LifeCycleId
          - FirstTransitionStorageClass
          - FirstTransitionInDays
          - SecondTransitionStorageClass
          - SecondTransitionInDays
          - ThirdTransitionInDays
          - ThirdTransitionStorageClass
          - ExpirationInDays
      -
        Label:
          default: NO LONGHER USED
        Parameters:
          - DataRestrictions
          - DataAccessRestrictions

      -
        Label:
          default: Update Parameter
        Parameters:
          - UpdateParameter
############################ Conditions ########################################

Conditions:
  GreengrassServiceAllowed: !Equals
    - !Ref AllowGreengrassService
    - 'true'
  S3ServiceAllowed: !Equals
    - !Ref AllowS3Service
    - 'true'
  LamdbaServiceAllowed: !Equals
    - !Ref AllowLamdbaService
    - 'true'
  EventsServiceAllowed: !Equals
    - !Ref AllowEventsService
    - 'true'
  Ec2ServiceAllowed: !Equals
    - !Ref AllowEC2Service
    - 'true'
  FSxLusterServiceAllowed: !Equals
    - !Ref AllowFSxLusterService
    - 'true'
  DataClass: !Equals
    - !Ref DataClassification
    - 'confidential/highly-confidential'
  UseIamRole: !Not [ !Equals [ !Ref IamRoleName , "" ] ]
  TempBucket: !Equals [ !Ref 'DataClassification', "Temporary" ]
  StandardBucket: !Or [!Equals [ !Ref 'DataClassification', "confidential/highly-confidential" ], !Equals [ !Ref 'DataClassification', "Non-confidential" ]]
  UseDataRestrictions: !Or [!Equals [ !Ref 'DataRestrictions', "Enable" ], !Equals [ !Ref 'DataClassification', "confidential/highly-confidential" ]]
  CloudFront: !Equals [ !Ref 'CloudFrontOriginBucket', "yes" ]
  UseObjectLock: !Equals [ !Ref 'ObjectLockEnabled', "true" ]

########################## Resources ###########################################

Resources:

########## Custom Resource ###########

#  CheckCSRCTags:
#    Condition: StandardBucket
#    Type: Custom::CheckCSRCTags
#    Properties:
#      ServiceToken: !Join
#        - ':'
#        - - 'arn:aws-cn:lambda'
#          - !Ref AWS::Region
#          - !Ref AWS::AccountId
#          - 'BHCHelper-CSRCTag-Recreate'
#      BucketName: !Ref S3BucketName
#      FullBucketName: !Join ['-',[ !Ref 'AWS::AccountId' , !Ref 'AWS::Region', !Ref S3BucketName]]
#      Action: "check_csrc_tag"
#      RandomVal: "{{resolve:ssm:/CSRC/Tags/RandomVal}}"
#      UpdateParameter: !Ref UpdateParameter

#  ReCreateCSRCTag:
#    Condition: StandardBucket
#    DependsOn:
#      - S3Bucket
#      - BucketPolicy
#      - CheckCSRCTags
#    Type: Custom::ReCreateCSRCTag
#    Properties:
#      ServiceToken: !Join
#        - ':'
#        - - 'arn:aws-cn:lambda'
#          - !Ref AWS::Region
#          - !Ref AWS::AccountId
#          - 'BHCHelper-CSRCTag-Recreate'
#      FullBucketName: !Join ['-',[ !Ref 'AWS::AccountId' , !Ref 'AWS::Region', !Ref S3BucketName]]
#      BucketName: !Ref S3BucketName
#      Action: "get_csrc_tag"
#      RandomVal: "{{resolve:ssm:/CSRC/Tags/RandomVal}}"
#      UpdateParameter: !Ref UpdateParameter


 # KMSserviceskeyRenamed:
#   Type: Custom::kms-serviceskey
#    Properties:
#      ServiceToken: !Join
#        - ':'
#        - - 'arn:aws-cn:lambda'
#          - !Ref AWS::Region
#          - !Ref AWS::AccountId
#          - 'BHCHelper-kms-serviceskey'
#      service: 's3'




#  CheckIAMRole:
#    Condition: UseIamRole
#    Type: Custom::s3-multi-role-inputs
#    Properties:
#      ServiceToken: !Join
#        - ':'
#        - - 'arn:aws-cn:lambda'
#          - !Ref AWS::Region
#          - !Ref AWS::AccountId
#          - 'function:BHCHelper-s3-multi-role-inputs'
#      IAMRoles: !Ref IamRoleName

############################# S3 bucket ########################################

#  IWS3Endpoint: 
#    Type: "AWS::EC2::VPCEndpoint"
#    Properties: 
#      PolicyDocument: 
#        Version: 2012-10-17
#        Statement:
#            - Effect: Allow
#              Principal: '*'
#              Action:
#                - 's3:GetObject'
#                - 's3:PutObject'
#                - 's3:DeleteObject'
#              Resource:
#                - 'arn:aws-cn:s3:::aws-allow-ec2-vpc-endpoint/*'
#      RouteTableIds: 
#        - !Ref RouteTableId
#      ServiceName: !Join
#        - ''
#        - - com.amazonaws.
#          - !Ref 'AWS::Region'
#          - .s3
#      VpcId: !Ref IWVPCID

  S3Bucket:
#    DependsOn:
#      - CheckCSRCTags
    DeletionPolicy: Retain
    Type: AWS::S3::Bucket
    Condition: StandardBucket
    Properties:
      BucketName: !Join ['-',[ !Ref 'AWS::AccountId' , !Ref 'AWS::Region', !Ref S3BucketName]]
      ObjectLockEnabled:
        Fn::If:
          - UseObjectLock
          - true
          - !Ref AWS::NoValue
      VersioningConfiguration:
          Fn::If:
            - DataClass
            -
              Status: 'Enabled'
            - !Ref AWS::NoValue

      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

      InventoryConfigurations:
        Fn::If:
          - DataClass
          -
            - Destination:
                BucketArn: !Join ['', ['arn:aws-cn:s3:::', 'local-logs-bucket', '-', !Ref 'AWS::AccountId', '-', !Ref 'AWS::Region' ]]
                Format: 'CSV'
                Prefix: !Sub 'AWSLogs/${AWS::AccountId}/S3Logs/${AWS::AccountId}-${AWS::Region}-${S3BucketName}/inventory'
              Enabled: 'true'
              Id: Inventory
              IncludedObjectVersions: 'Current'
              OptionalFields:
                - "Size"
                - "LastModifiedDate"
                - "StorageClass"
                - "ETag"
                - "EncryptionStatus"
              ScheduleFrequency: Weekly
          - !Ref AWS::NoValue

      LifecycleConfiguration:
        Rules:
          -
            Id: !Ref LifeCycleId
            NoncurrentVersionTransitions:
              Fn::If:
                - DataClass
                -
                  - StorageClass: !Ref FirstTransitionStorageClass
                    TransitionInDays: !Ref FirstTransitionInDays
                  - StorageClass: !Ref SecondTransitionStorageClass
                    TransitionInDays: !Ref SecondTransitionInDays
                  - StorageClass: !Ref ThirdTransitionStorageClass
                    TransitionInDays: !Ref ThirdTransitionInDays

                - !Ref AWS::NoValue
            NoncurrentVersionExpirationInDays:
              Fn::If:
                - DataClass
                - !Ref ExpirationInDays
                - !Ref AWS::NoValue

            Transitions:
              - StorageClass: !Ref FirstTransitionStorageClass
                TransitionInDays: !Ref FirstTransitionInDays
              - StorageClass: !Ref SecondTransitionStorageClass
                TransitionInDays: !Ref SecondTransitionInDays
              - StorageClass: !Ref ThirdTransitionStorageClass
                TransitionInDays: !Ref ThirdTransitionInDays

            ExpirationInDays: !Ref ExpirationInDays
            Status: Enabled

      BucketEncryption:
        ServerSideEncryptionConfiguration:
            Fn::If:
              - CloudFront
              -
                - ServerSideEncryptionByDefault:
                    SSEAlgorithm: AES256
              -
                - ServerSideEncryptionByDefault:
                    SSEAlgorithm: aws:kms
                    KMSMasterKeyID: !Sub 'arn:aws-cn:kms:${AWS::Region}:${AWS::AccountId}:alias/iws3' #!GetAtt KMSserviceskeyRenamed.key_arn

      LoggingConfiguration:
        Fn::If:
          - StandardBucket
          -
            DestinationBucketName: !Sub bh0001-application-local-logs-${AWS::AccountId}
            LogFilePrefix: !Sub 'AWSLogs/${AWS::AccountId}/S3Logs/${AWS::AccountId}-${AWS::Region}-${S3BucketName}/'
          - !Ref AWS::NoValue

      Tags:
        -
          Key: BucketType
          Value: 'Permanent'
        -
          Key: bucketname
          Value: !Ref 'S3BucketName'
        -
          Fn::If:
            - CloudFront
            -
              Key: bucketencryption
              Value: 'AES256'
            -
              Key: bucketencryption
              Value: 'aws:kms'
        -
          Key: DataClassification
          Value: !Ref 'DataClassification'
        -
          Fn::If:
            - CloudFront
            -
              Key: CSRC_DBC_329
              Value: 'CSRC_DBC_329_S3_CF_Encryption'
            -
              !Ref "AWS::NoValue"
        -
          Key: app
          Value: !Ref app
        -
          Key: env
          Value: !Ref env
        -
          Key: CSRC_EXC_684
          Value: 'CSRC_EXC_684_S3_PreSigned'
############################## S3 bucket Policy ################################

  BucketPolicy:
#    DependsOn:
#      - CheckCSRCTags
    DeletionPolicy: Retain
    Type: 'AWS::S3::BucketPolicy'
    Condition: StandardBucket
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:

        -
            Sid: 'S3xSecureTransport'
            Effect: Deny
            Principal: "*"
            Action: "s3:*"
            Resource:
              - !Join ['', ['arn:aws-cn:s3:::', !Ref 'AWS::AccountId' , '-', !Ref 'AWS::Region' ,'-', !Ref "S3BucketName", /* ]]
              - !Join ['', ['arn:aws-cn:s3:::', !Ref 'AWS::AccountId' , '-', !Ref 'AWS::Region' ,'-', !Ref "S3BucketName"]]
            Condition:
              Bool:
                aws:SecureTransport: false

################################################################################################
        -
            Sid: 'VPCRestriction' # Specific VPC and Specific VPC Endpoint
            Effect: Deny
            NotPrincipal:
              Service:
                - !If [S3ServiceAllowed, 's3.amazonaws.com', !Ref "AWS::NoValue"]
                - !If [LamdbaServiceAllowed, 'lambda.amazonaws.com', !Ref "AWS::NoValue"]
                - !If [EventsServiceAllowed, 'events.amazonaws.com', !Ref "AWS::NoValue"]
                - !If [Ec2ServiceAllowed, 'ec2.amazonaws.com', !Ref "AWS::NoValue"]
                - !If [FSxLusterServiceAllowed, 's3.data-source.lustre.fsx.amazonaws.com', !Ref "AWS::NoValue"]
                - !If [GreengrassServiceAllowed, 'greengrass.amazonaws.com', !Ref "AWS::NoValue"]
            Action: "s3:*"
            Resource:
              - !Join ['', ['arn:aws-cn:s3:::', !Ref 'AWS::AccountId' , '-', !Ref 'AWS::Region' ,'-', !Ref "S3BucketName" , /* ]]
              - !Join ['', ['arn:aws-cn:s3:::', !Ref 'AWS::AccountId' , '-', !Ref 'AWS::Region' ,'-', !Ref "S3BucketName"]]
            Condition:
              StringNotEquals:
                aws:sourceVpce: !Ref IWS3Endpoint  #!GetAtt GetVPCEndpointIdRenamed.vpce_Id
                aws:sourceVpc: !Ref IWVPCID #!GetAtt VPCLookupUtil.VPCId
              ArnNotLike:
                aws:PrincipalArn:
                   - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "SC-LaunchConstraint" ]]
                   - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "FSCAdminCH" ]]
                   - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "FSCNetworkAdminCH" ]]
                   - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "FSCAuditorCH" ]]
                   - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "FSCSecurityCH" ]]
                   - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "FSCDBAdminCH" ]]
                   - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "FSCReadCH" ]]
                   - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "FSCBillingCH" ]]
                   - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "FSCOperationsCH" ]]
                   - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "FSCPowerUserCH" ]]
                   - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "FSCDeveloperCH" ]]
                   - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "FSCStandardUserCH" ]]
                   - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "FSCStandardPlusCH" ]]
                   - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "HelixConnectorReaderRole" ]]
                   - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "HelixConnectorWriterRole" ]]
                   - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "SC-SFTP-*" ]]
                   - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "aws-service-role/access-analyzer.amazonaws.com/AWSServiceRoleForAccessAnalyzer" ]]
                   - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "aws-service-role/s3.data-source.lustre.fsx.amazonaws.com/AWSServiceRoleForFSxS3Access_*" ]]
                   - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', 'SC-IOT-*']]
        -
          Sid: 'DenyAccess'
          NotPrincipal:
            Service:
              - !If [S3ServiceAllowed, 's3.amazonaws.com', !Ref "AWS::NoValue"]
              - !If [LamdbaServiceAllowed, 'lambda.amazonaws.com', !Ref "AWS::NoValue"]
              - !If [EventsServiceAllowed, 'events.amazonaws.com', !Ref "AWS::NoValue"]
              - !If [Ec2ServiceAllowed, 'ec2.amazonaws.com', !Ref "AWS::NoValue"]
              - !If [FSxLusterServiceAllowed, 's3.data-source.lustre.fsx.amazonaws.com', !Ref "AWS::NoValue"]
              - !If [GreengrassServiceAllowed, 'greengrass.amazonaws.com', !Ref "AWS::NoValue"]
          Action: 's3:*'
          Effect: Deny
          Condition:
             ArnNotLike:
              aws:PrincipalArn:
                !Split
                  - ","
                  - !Join
                    - ","
#                    - - !If [ UseIamRole, !GetAtt CheckIAMRole.IAMRoles, !Ref "AWS::NoValue"]
                    - - !If [ UseIamRole, !Ref "AWS::NoValue", !Ref "AWS::NoValue"]
                      - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "FSCAdminCH" ]]
                      - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "FSCNetworkAdminCH" ]]
                      - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "FSCAuditorCH" ]]
                      - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "FSCSecurityCH" ]]
                      - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "FSCDBAdminCH" ]]
                      - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "FSCReadCH" ]]
                      - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "FSCBillingCH" ]]
                      - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "FSCOperationsCH" ]]
                      - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "FSCPowerUserCH" ]]
                      - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "FSCDeveloperCH" ]]
                      - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "FSCStandardUserCH" ]]
                      - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "FSCStandardPlusCH" ]]
                      - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "SC-LaunchConstraint" ]]
                      - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "HelixConnectorReaderRole" ]]
                      - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "HelixConnectorWriterRole" ]]
                      - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "SC-SFTP-*" ]]
                      - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "aws-service-role/access-analyzer.amazonaws.com/AWSServiceRoleForAccessAnalyzer" ]]
                      - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', "aws-service-role/s3.data-source.lustre.fsx.amazonaws.com/AWSServiceRoleForFSxS3Access_*" ]]
                      - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', 'SC-csrc-exception-role-', !Ref "AWS::Region" ]]
                      - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':role/', 'SC-IOT-*']]
                      - !Join [ "" , ['arn:aws-cn:iam::', !Ref "AWS::AccountId", ':user/', 'svc-*_user']]
          Resource:
            - !Join ['', ['arn:aws-cn:s3:::', !Ref 'AWS::AccountId' , '-', !Ref 'AWS::Region' ,'-', !Ref "S3BucketName" , /* ]]
            - !Join ['', ['arn:aws-cn:s3:::', !Ref 'AWS::AccountId' , '-', !Ref 'AWS::Region' ,'-', !Ref "S3BucketName" ]]

#        -
#          Sid: DenyS3PresignedUrl
#          Effect: Deny
#          Principal: "*"
#          Action:
#            - s3:*
#          Resource:
#            - !Join ['', ['arn:aws-cn:s3:::', !Ref 'AWS::AccountId' , '-', !Ref 'AWS::Region' ,'-', !Ref "S3BucketName" , /* ]]
#          Condition:
#            StringNotEquals:
#              s3:x-amz-content-sha256: UNSIGNED-PAYLOAD
#            StringNotLike:
#              s3:authType: REST-HEADER
#            NumericGreaterThan:
#              s3:signatureAge: 600

######################## Temp S3 bucket ###########################

  TempS3Bucket:
    DeletionPolicy: Delete
    Condition: TempBucket
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join ['',[!Ref 'AWS::AccountId' , '-', !Ref 'AWS::Region' ,'-', !Ref "S3BucketName"]]
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: 'AES256'
      Tags:
        -
          Key: BucketType
          Value: 'Temporary'
        -
          Key: DataClassification
          Value: !Ref 'DataClassification'
        -
          Key: app
          Value: !Ref app
        -
          Key: env
          Value: !Ref env
        -
          Key: bucketencryption
          Value: 'AES256'
############################## Outputs #########################################
Outputs:
  S3BucketName:
    Description: S3 bucket Name
    Value: !Join ['',[!Ref 'AWS::AccountId' , '-', !Ref 'AWS::Region' ,'-', !Ref "S3BucketName"]]

  S3BucketArn:
    Condition: StandardBucket
    Description: S3 Bucket ARN
    Value: !GetAtt S3Bucket.Arn

  TempS3Bucket:
    Condition: TempBucket
    Description: S3 Bucket ARN
    Value: !GetAtt TempS3Bucket.Arn

  UpdateParameter:
    Description: UpdateParameter
    Value: !Ref UpdateParameter